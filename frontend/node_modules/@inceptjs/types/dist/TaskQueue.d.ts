import { Status } from './Status';
export default class TaskQueue {
    get length(): number;
    readonly tasks: Task[];
    protected lower: number;
    protected upper: number;
    add(callback: Function, priority?: number): TaskQueue;
    push(callback: Function): TaskQueue;
    shift(callback: Function): TaskQueue;
    then(callback: Function): TaskQueue;
    run(...args: any[]): Promise<Status>;
    runSync(...args: any[]): Status;
}
export interface Task {
    callback: Function;
    priority: number;
}
export interface Queue {
    queue: Task[];
    add(callback: Function, priority: number): Queue;
    push(callback: Function): Queue;
    shift(callback: Function): Queue;
    run(...args: any[]): Promise<number>;
}

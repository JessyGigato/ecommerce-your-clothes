"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.RequestReferrers = exports.RequestRedirects = exports.RequestModes = exports.RequestCredentials = exports.RequestCaches = exports.RequestMethods = void 0;
const node_fetch_1 = require("node-fetch");
const types_1 = require("@inceptjs/types");
const Body_1 = __importDefault(require("./Body"));
const Exception_1 = __importDefault(require("./Exception"));
var RequestMethods;
(function (RequestMethods) {
    RequestMethods["GET"] = "GET";
    RequestMethods["POST"] = "POST";
    RequestMethods["PUT"] = "PUT";
    RequestMethods["DELETE"] = "DELETE";
    RequestMethods["CONNECT"] = "CONNECT";
    RequestMethods["OPTIONS"] = "OPTIONS";
    RequestMethods["TRACE"] = "TRACE";
})(RequestMethods = exports.RequestMethods || (exports.RequestMethods = {}));
;
var RequestCaches;
(function (RequestCaches) {
    RequestCaches["DEFAULT"] = "default";
    RequestCaches["NO_STORE"] = "no-store";
    RequestCaches["RELOAD"] = "no-reload";
    RequestCaches["NO_CACHE"] = "no-cache";
    RequestCaches["FORCE_CACHE"] = "force-cache";
    RequestCaches["ONLY_IF_CACHED"] = "only-if-cached";
})(RequestCaches = exports.RequestCaches || (exports.RequestCaches = {}));
;
var RequestCredentials;
(function (RequestCredentials) {
    RequestCredentials["OMIT"] = "omit";
    RequestCredentials["SAME_ORIGIN"] = "same-origin";
    RequestCredentials["INCLUDE"] = "include";
})(RequestCredentials = exports.RequestCredentials || (exports.RequestCredentials = {}));
;
var RequestModes;
(function (RequestModes) {
    RequestModes["CORS"] = "cors";
    RequestModes["NO_CORS"] = "no-cors";
    RequestModes["SAME_ORIGIN"] = "same-origin";
    RequestModes["NAVIGATE"] = "same-origin";
})(RequestModes = exports.RequestModes || (exports.RequestModes = {}));
;
var RequestRedirects;
(function (RequestRedirects) {
    RequestRedirects["FOLLOW"] = "follow";
    RequestRedirects["ERROR"] = "error";
    RequestRedirects["MANUAL"] = "manual";
})(RequestRedirects = exports.RequestRedirects || (exports.RequestRedirects = {}));
;
var RequestReferrers;
(function (RequestReferrers) {
    RequestReferrers["NO_REFERRER"] = "no-referrer";
    RequestReferrers["CLIENT"] = "client";
    RequestReferrers["ABOUT"] = "about:client";
})(RequestReferrers = exports.RequestReferrers || (exports.RequestReferrers = {}));
;
class Request extends Body_1.default {
    constructor(url = null, init = {}) {
        super(null, init);
        this._params = new types_1.Store;
        if (typeof url === 'string') {
            this._url = new URL(url);
            this.params = Object.assign(this.params.get(), this.query);
        }
        this._cache = init.cache || RequestCaches.DEFAULT;
        this._credentials = init.credentials || RequestCredentials.SAME_ORIGIN;
        this._integrity = init.integrity;
        this._method = init.method || RequestMethods.GET;
        this._mode = init.mode || RequestModes.CORS;
        this._redirect = init.redirect || RequestRedirects.FOLLOW;
        this._referrer = init.referrer || RequestReferrers.CLIENT;
    }
    get cache() {
        return this._cache;
    }
    get destination() {
        throw Exception_1.default.for('`destination` is not implemented');
    }
    get credentials() {
        return this._credentials;
    }
    get integrity() {
        return this._integrity;
    }
    get method() {
        return this._method;
    }
    get mode() {
        return this._mode;
    }
    get params() {
        return this._params;
    }
    get redirect() {
        return this._redirect;
    }
    get referrer() {
        return this._referrer;
    }
    get referrerPolicy() {
        throw Exception_1.default.for('`referrerPolicy` is not implemented');
    }
    set params(data) {
        Exception_1.default.require(data.constructor === Object, 'Value expected Object');
        this._params.set(data);
    }
    clone() {
        return new Response(this.url, this._getInit());
    }
    _getInit() {
        let body = this._body || undefined;
        if ((body === null || body === void 0 ? void 0 : body.constructor) === Object
            && typeof body.pipe !== 'function') {
            body = JSON.stringify(body);
        }
        return {
            body,
            cache: this._cache,
            credentials: this._credentials,
            integrity: this._integrity,
            method: this._method,
            mode: this._mode,
            redirect: this._redirect,
            referrer: this._referrer
        };
    }
    _getResource() {
        return new node_fetch_1.Request(this.url, this._getInit());
    }
}
exports.default = Request;
;

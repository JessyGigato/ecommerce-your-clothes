import { EventEmitter, Reflection, Statuses, Store, TaskQueue, Emitter, Event, Queue, Status, Task } from '@inceptjs/types';
import Request, { RequestOptions, RequestMethods, RequestCaches, RequestCredentials, RequestModes, RequestRedirects, RequestReferrers } from '../Request';
import Response, { ResponseOptions, ResponseTypes } from '../Response';
import Route from '../Route';
import Router from '../Router';
import Exception from '../Exception';
export default class Pluggable extends Router {
    protected plugins: Record<string, any>;
    bootstrap(callback: Function): Pluggable;
    plugin(name: string, definition?: Record<string, any>): any;
}
export { Request, Response, Route, Pluggable as Router, EventEmitter, Exception, Reflection, Statuses, Store, TaskQueue, Emitter, Event, Queue, Status, Task, RequestOptions, RequestMethods, RequestCaches, RequestCredentials, RequestModes, RequestRedirects, RequestReferrers, ResponseOptions, ResponseTypes };

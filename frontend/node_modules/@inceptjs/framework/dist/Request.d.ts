import { Headers, Request as NativeRequest } from 'node-fetch';
import { Store } from '@inceptjs/types';
import Body from './Body';
export declare type RequestOptions = {
    body?: any;
    cache?: string;
    context?: any;
    credentials?: string;
    headers?: Headers | Record<string, string>;
    integrity?: string;
    method?: string;
    mode?: string;
    redirect?: string;
    referrer?: string;
    resource?: any;
};
export declare enum RequestMethods {
    GET = "GET",
    POST = "POST",
    PUT = "PUT",
    DELETE = "DELETE",
    CONNECT = "CONNECT",
    OPTIONS = "OPTIONS",
    TRACE = "TRACE"
}
export declare enum RequestCaches {
    DEFAULT = "default",
    NO_STORE = "no-store",
    RELOAD = "no-reload",
    NO_CACHE = "no-cache",
    FORCE_CACHE = "force-cache",
    ONLY_IF_CACHED = "only-if-cached"
}
export declare enum RequestCredentials {
    OMIT = "omit",
    SAME_ORIGIN = "same-origin",
    INCLUDE = "include"
}
export declare enum RequestModes {
    CORS = "cors",
    NO_CORS = "no-cors",
    SAME_ORIGIN = "same-origin",
    NAVIGATE = "same-origin"
}
export declare enum RequestRedirects {
    FOLLOW = "follow",
    ERROR = "error",
    MANUAL = "manual"
}
export declare enum RequestReferrers {
    NO_REFERRER = "no-referrer",
    CLIENT = "client",
    ABOUT = "about:client"
}
export default class Request extends Body {
    protected _cache: string;
    protected _credentials: string;
    protected _integrity: string | undefined;
    protected _method: string;
    protected _mode: string;
    protected _params: Store;
    protected _redirect: string;
    protected _referrer: string;
    get cache(): string;
    get destination(): string;
    get credentials(): string;
    get integrity(): string | undefined;
    get method(): string;
    get mode(): string;
    get params(): Store;
    get redirect(): string;
    get referrer(): string;
    get referrerPolicy(): string;
    set params(data: Record<string, any>);
    constructor(url?: string | null, init?: RequestOptions);
    clone(): Response;
    protected _getInit(): Record<string, any>;
    protected _getResource(): NativeRequest;
}

{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.vfs = void 0;\nconst fs_1 = __importDefault(require(\"fs\"));\nconst path_1 = __importDefault(require(\"path\"));\nconst module_1 = __importDefault(require(\"module\"));\nconst framework_1 = require(\"@inceptjs/framework\");\nconst memfs_1 = require(\"memfs\");\nconst patchFS_1 = __importDefault(require(\"./patchFS\"));\nconst Exception_1 = __importDefault(require(\"./Exception\"));\nclass VirtualFS extends memfs_1.Volume {\n  constructor() {\n    super(...arguments);\n    this._emitter = new framework_1.EventEmitter();\n    this._revertFS = null;\n    this._transformers = [];\n    this._originals = {\n      existsSync: fs_1.default.existsSync.bind(fs_1.default)\n    };\n  }\n  addRule(test, callback) {\n    Exception_1.default.require(typeof test === 'function' || test instanceof RegExp, 'Argument 1 expecting RegExp or Function');\n    Exception_1.default.require(typeof callback === 'function', 'Argument 2 expecting Function');\n    this._transformers.push({\n      test,\n      callback\n    });\n    return this;\n  }\n  exists(path, callback) {\n    this._resolveFile(path);\n    return super.exists(path, callback);\n  }\n  existsSync(path) {\n    this._resolveFile(path);\n    return super.existsSync(path);\n  }\n  lstat(path, ...args) {\n    this._resolveFile(path);\n    return super.lstat(path, ...args);\n  }\n  lstatSync(path, options) {\n    this._resolveFile(path);\n    return super.lstatSync(path);\n  }\n  modulePaths(pathname, parent) {\n    parent = parent || path_1.default.dirname(pathname);\n    const module = new module_1.default(path_1.default.dirname(parent));\n    module.paths = module_1.default._nodeModulePaths(pathname, module);\n    return module_1.default._resolveLookupPaths(pathname, module);\n  }\n  patchFS() {\n    if (typeof this._revertFS === 'function') {\n      return this;\n    }\n    this._revertFS = (0, patchFS_1.default)(this);\n    this._originals._findPath = module_1.default._findPath;\n    module_1.default._findPath = this._findPath.bind(this);\n    return this;\n  }\n  readFileSync(id, ...args) {\n    this._resolveFile(id);\n    return this.transform(id, super.readFileSync(id, ...args));\n  }\n  readFile(id, ...args) {\n    this._resolveFile(id);\n    if (typeof args[args.length - 1] === 'function') {\n      const callback = args[args.length - 1];\n      args[args.length - 1] = (error, results) => {\n        if (results) {\n          results = this.transform(id, results);\n        }\n        callback(error, results);\n      };\n    }\n    super.readFile(id, ...args);\n  }\n  resolvePath(request, paths = [], context = fs_1.default) {\n    let filename;\n    if (!(filename = tryAbsolute(request, context)) && !(filename = tryRelative(request, paths, context)) && !(filename = tryModule(request, paths, context))) {\n      return false;\n    }\n    return filename;\n  }\n  resolveModule(name, parent) {\n    const paths = this.modulePaths(name, parent);\n    for (const pathname of paths) {\n      const folder = path_1.default.join(pathname, name);\n      if (fs_1.default.existsSync(folder)) {\n        return folder;\n      }\n    }\n    return false;\n  }\n  revertPatch() {\n    if (typeof this._revertFS === 'function') {\n      this._revertFS();\n      this._revertFS = null;\n    }\n    if (typeof this._originals._findPath === 'function') {\n      module_1.default._findPath = this._originals._findPath;\n      delete this._originals._findPath;\n    }\n    return this;\n  }\n  route(path, router) {\n    Exception_1.default.require(typeof path === 'string', 'Argument 1 expected String');\n    Exception_1.default.require(typeof router === 'function', 'Argument 2 expected String');\n    const pattern = path.replace(/(\\:[a-zA-Z0-9\\-_]+)/g, '*').replaceAll('*', '([^/]+)').replaceAll('([^/]+)([^/]+)', '(.*)');\n    const event = new RegExp(`^${pattern}/*$`, 'ig');\n    this._emitter.on(event, router);\n    return this;\n  }\n  routeParams(file, route) {\n    Exception_1.default.require(typeof file === 'string', 'Argument 1 expected String');\n    Exception_1.default.require(typeof route === 'string', 'Argument 2 expected String');\n    const pattern = route.replace(/(\\:[a-zA-Z0-9\\-_]+)/g, '*').replaceAll('*', '([^/]+)').replaceAll('([^/]+)([^/]+)', '(.*)');\n    const params = {\n      file: file,\n      pattern: new RegExp(`^${pattern}/*$`, 'ig'),\n      args: [],\n      params: {}\n    };\n    const matches = Array.from(params.file.matchAll(pattern));\n    if (!Array.isArray(matches[0]) || !matches[0].length) {\n      return params;\n    }\n    const map = Array.from(route.matchAll(/(\\:[a-zA-Z0-9\\-_]+)|(\\*\\*)|(\\*)/g)).map(match => match[0]);\n    matches[0].slice().forEach((param, i) => {\n      if (!i) {\n        return;\n      }\n      if (typeof map[i - 1] !== 'string' || map[i - 1].indexOf('*') === 0) {\n        if (param.indexOf('/') === -1) {\n          return params.args.push(param);\n        }\n        return Array.prototype.push.apply(params.args, param.split('/'));\n      }\n      if (typeof map[i - 1] === 'string') {\n        params.params[map[i - 1].substr(1)] = param;\n      }\n    });\n    return params;\n  }\n  stat(path, ...args) {\n    this._resolveFile(path);\n    return super.stat(path, ...args);\n  }\n  statSync(path, options) {\n    this._resolveFile(path);\n    return super.statSync(path);\n  }\n  transform(file, body) {\n    for (const transformer of this._transformers) {\n      const valid = typeof transformer.test === 'function' ? transformer.test(file) : transformer.test.test(file);\n      if (valid) {\n        const transformed = transformer.callback(file, body);\n        if (typeof transformed === 'string') {\n          body = transformed;\n        }\n      }\n    }\n    return body;\n  }\n  _findPath(request, paths, isMain) {\n    let filename = this._originals._findPath.call(module_1.default, request, paths, isMain);\n    if (filename) {\n      return filename;\n    }\n    if (!(filename = this.resolvePath(request, paths, this))) {\n      return false;\n    }\n    const cacheKey = request + '\\x00' + paths.join('\\x00');\n    module_1.default._pathCache[cacheKey] = filename;\n    return filename;\n  }\n  _resolveFile(file) {\n    if (this._originals.existsSync(file) || super.existsSync(file)) {\n      return this;\n    }\n    const response = new framework_1.Response();\n    this._emitter.emitSync(file, file, response, this);\n    if (response.filled) {\n      const dirname = path_1.default.dirname(file);\n      if (!super.existsSync(dirname)) {\n        this.mkdirSync(dirname, {\n          recursive: true\n        });\n      }\n      this.writeFileSync(file, response.body);\n    }\n    return this;\n  }\n}\nexports.default = VirtualFS;\nfunction tryAbsolute(request, fs) {\n  if (!path_1.default.isAbsolute(request)) {\n    return false;\n  }\n  let file = request;\n  if (fs.existsSync(file) && fs.lstatSync(file).isFile()) {\n    return file;\n  }\n  file = tryVariants(file, fs);\n  if (file) {\n    return file;\n  }\n  return false;\n}\nfunction tryRelative(request, paths, fs) {\n  if (!paths.length || !/^\\.{1,2}[\\/\\\\]/.test(request)) {\n    return false;\n  }\n  let file = path_1.default.resolve(paths[0], request);\n  if (fs.existsSync(file) && fs.lstatSync(file).isFile()) {\n    return file;\n  }\n  file = tryVariants(file, fs);\n  if (file) {\n    return file;\n  }\n  return false;\n}\nfunction tryModule(request, paths, fs) {\n  for (const pathname of paths) {\n    let file = path_1.default.resolve(pathname, request);\n    if (fs.existsSync(file) && fs.lstatSync(file).isFile()) {\n      return file;\n    }\n    file = tryVariants(file, fs);\n    if (file) {\n      return file;\n    }\n  }\n  return false;\n}\nfunction tryVariants(request, fs) {\n  let file = tryExtensions(request, fs);\n  if (file) {\n    return file;\n  }\n  file = tryIndex(request, fs);\n  if (file) {\n    return file;\n  }\n  return false;\n}\nfunction tryIndex(request, fs) {\n  let file = `${request}/index`;\n  if (fs.existsSync(file) && fs.lstatSync(file).isFile()) {\n    return file;\n  }\n  file = tryExtensions(file, fs);\n  if (file) {\n    return file;\n  }\n  return false;\n}\nfunction tryExtensions(request, fs) {\n  let file = `${request}.js`;\n  if (fs.existsSync(file) && fs.lstatSync(file).isFile()) {\n    return file;\n  }\n  file = `${request}.jsx`;\n  if (fs.existsSync(file) && fs.lstatSync(file).isFile()) {\n    return file;\n  }\n  file = `${request}.json`;\n  if (fs.existsSync(file) && fs.lstatSync(file).isFile()) {\n    return file;\n  }\n  return false;\n}\nconst vfs = new VirtualFS();\nexports.vfs = vfs;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","vfs","fs_1","require","path_1","module_1","framework_1","memfs_1","patchFS_1","Exception_1","VirtualFS","Volume","constructor","arguments","_emitter","EventEmitter","_revertFS","_transformers","_originals","existsSync","default","bind","addRule","test","callback","RegExp","push","exists","path","_resolveFile","lstat","args","lstatSync","options","modulePaths","pathname","parent","dirname","module","paths","_nodeModulePaths","_resolveLookupPaths","patchFS","_findPath","readFileSync","id","transform","readFile","length","error","results","resolvePath","request","context","filename","tryAbsolute","tryRelative","tryModule","resolveModule","name","folder","join","revertPatch","route","router","pattern","replace","replaceAll","event","on","routeParams","file","params","matches","Array","from","matchAll","isArray","map","match","slice","forEach","param","i","indexOf","prototype","apply","split","substr","stat","statSync","body","transformer","valid","transformed","isMain","call","cacheKey","_pathCache","response","Response","emitSync","filled","mkdirSync","recursive","writeFileSync","fs","isAbsolute","isFile","tryVariants","resolve","tryExtensions","tryIndex"],"sources":["C:/Users/jessy/Documents/work/PROGRAMACION/PROYECTOS/REACT/your-clothes/frontend/node_modules/virtual_modules/dist/VirtualFS.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.vfs = void 0;\nconst fs_1 = __importDefault(require(\"fs\"));\nconst path_1 = __importDefault(require(\"path\"));\nconst module_1 = __importDefault(require(\"module\"));\nconst framework_1 = require(\"@inceptjs/framework\");\nconst memfs_1 = require(\"memfs\");\nconst patchFS_1 = __importDefault(require(\"./patchFS\"));\nconst Exception_1 = __importDefault(require(\"./Exception\"));\nclass VirtualFS extends memfs_1.Volume {\n    constructor() {\n        super(...arguments);\n        this._emitter = new framework_1.EventEmitter;\n        this._revertFS = null;\n        this._transformers = [];\n        this._originals = {\n            existsSync: fs_1.default.existsSync.bind(fs_1.default)\n        };\n    }\n    addRule(test, callback) {\n        Exception_1.default.require(typeof test === 'function' || test instanceof RegExp, 'Argument 1 expecting RegExp or Function');\n        Exception_1.default.require(typeof callback === 'function', 'Argument 2 expecting Function');\n        this._transformers.push({ test, callback });\n        return this;\n    }\n    exists(path, callback) {\n        this._resolveFile(path);\n        return super.exists(path, callback);\n    }\n    existsSync(path) {\n        this._resolveFile(path);\n        return super.existsSync(path);\n    }\n    lstat(path, ...args) {\n        this._resolveFile(path);\n        return super.lstat(path, ...args);\n    }\n    lstatSync(path, options) {\n        this._resolveFile(path);\n        return super.lstatSync(path);\n    }\n    modulePaths(pathname, parent) {\n        parent = parent || path_1.default.dirname(pathname);\n        const module = new module_1.default(path_1.default.dirname(parent));\n        module.paths = module_1.default._nodeModulePaths(pathname, module);\n        return module_1.default._resolveLookupPaths(pathname, module);\n    }\n    patchFS() {\n        if (typeof this._revertFS === 'function') {\n            return this;\n        }\n        this._revertFS = (0, patchFS_1.default)(this);\n        this._originals._findPath = module_1.default._findPath;\n        module_1.default._findPath = this._findPath.bind(this);\n        return this;\n    }\n    readFileSync(id, ...args) {\n        this._resolveFile(id);\n        return this.transform(id, super.readFileSync(id, ...args));\n    }\n    readFile(id, ...args) {\n        this._resolveFile(id);\n        if (typeof args[args.length - 1] === 'function') {\n            const callback = args[args.length - 1];\n            args[args.length - 1] = (error, results) => {\n                if (results) {\n                    results = this.transform(id, results);\n                }\n                callback(error, results);\n            };\n        }\n        super.readFile(id, ...args);\n    }\n    resolvePath(request, paths = [], context = fs_1.default) {\n        let filename;\n        if (!(filename = tryAbsolute(request, context))\n            && !(filename = tryRelative(request, paths, context))\n            && !(filename = tryModule(request, paths, context))) {\n            return false;\n        }\n        return filename;\n    }\n    resolveModule(name, parent) {\n        const paths = this.modulePaths(name, parent);\n        for (const pathname of paths) {\n            const folder = path_1.default.join(pathname, name);\n            if (fs_1.default.existsSync(folder)) {\n                return folder;\n            }\n        }\n        return false;\n    }\n    revertPatch() {\n        if (typeof this._revertFS === 'function') {\n            this._revertFS();\n            this._revertFS = null;\n        }\n        if (typeof this._originals._findPath === 'function') {\n            module_1.default._findPath = this._originals._findPath;\n            delete this._originals._findPath;\n        }\n        return this;\n    }\n    route(path, router) {\n        Exception_1.default.require(typeof path === 'string', 'Argument 1 expected String');\n        Exception_1.default.require(typeof router === 'function', 'Argument 2 expected String');\n        const pattern = path\n            .replace(/(\\:[a-zA-Z0-9\\-_]+)/g, '*')\n            .replaceAll('*', '([^/]+)')\n            .replaceAll('([^/]+)([^/]+)', '(.*)');\n        const event = new RegExp(`^${pattern}/*$`, 'ig');\n        this._emitter.on(event, router);\n        return this;\n    }\n    routeParams(file, route) {\n        Exception_1.default.require(typeof file === 'string', 'Argument 1 expected String');\n        Exception_1.default.require(typeof route === 'string', 'Argument 2 expected String');\n        const pattern = route\n            .replace(/(\\:[a-zA-Z0-9\\-_]+)/g, '*')\n            .replaceAll('*', '([^/]+)')\n            .replaceAll('([^/]+)([^/]+)', '(.*)');\n        const params = {\n            file: file,\n            pattern: new RegExp(`^${pattern}/*$`, 'ig'),\n            args: [],\n            params: {}\n        };\n        const matches = Array.from(params.file.matchAll(pattern));\n        if (!Array.isArray(matches[0]) || !matches[0].length) {\n            return params;\n        }\n        const map = Array.from(route.matchAll(/(\\:[a-zA-Z0-9\\-_]+)|(\\*\\*)|(\\*)/g)).map(match => match[0]);\n        matches[0].slice().forEach((param, i) => {\n            if (!i) {\n                return;\n            }\n            if (typeof map[i - 1] !== 'string'\n                || map[i - 1].indexOf('*') === 0) {\n                if (param.indexOf('/') === -1) {\n                    return params.args.push(param);\n                }\n                return Array.prototype.push.apply(params.args, param.split('/'));\n            }\n            if (typeof map[i - 1] === 'string') {\n                params.params[map[i - 1].substr(1)] = param;\n            }\n        });\n        return params;\n    }\n    stat(path, ...args) {\n        this._resolveFile(path);\n        return super.stat(path, ...args);\n    }\n    statSync(path, options) {\n        this._resolveFile(path);\n        return super.statSync(path);\n    }\n    transform(file, body) {\n        for (const transformer of this._transformers) {\n            const valid = typeof transformer.test === 'function'\n                ? transformer.test(file)\n                : transformer.test.test(file);\n            if (valid) {\n                const transformed = transformer.callback(file, body);\n                if (typeof transformed === 'string') {\n                    body = transformed;\n                }\n            }\n        }\n        return body;\n    }\n    _findPath(request, paths, isMain) {\n        let filename = this._originals._findPath.call(module_1.default, request, paths, isMain);\n        if (filename) {\n            return filename;\n        }\n        if (!(filename = this.resolvePath(request, paths, this))) {\n            return false;\n        }\n        const cacheKey = request + '\\x00' + paths.join('\\x00');\n        module_1.default._pathCache[cacheKey] = filename;\n        return filename;\n    }\n    _resolveFile(file) {\n        if (this._originals.existsSync(file) || super.existsSync(file)) {\n            return this;\n        }\n        const response = new framework_1.Response();\n        this._emitter.emitSync(file, file, response, this);\n        if (response.filled) {\n            const dirname = path_1.default.dirname(file);\n            if (!super.existsSync(dirname)) {\n                this.mkdirSync(dirname, { recursive: true });\n            }\n            this.writeFileSync(file, response.body);\n        }\n        return this;\n    }\n}\nexports.default = VirtualFS;\nfunction tryAbsolute(request, fs) {\n    if (!path_1.default.isAbsolute(request)) {\n        return false;\n    }\n    let file = request;\n    if (fs.existsSync(file) && fs.lstatSync(file).isFile()) {\n        return file;\n    }\n    file = tryVariants(file, fs);\n    if (file) {\n        return file;\n    }\n    return false;\n}\nfunction tryRelative(request, paths, fs) {\n    if (!paths.length || !/^\\.{1,2}[\\/\\\\]/.test(request)) {\n        return false;\n    }\n    let file = path_1.default.resolve(paths[0], request);\n    if (fs.existsSync(file) && fs.lstatSync(file).isFile()) {\n        return file;\n    }\n    file = tryVariants(file, fs);\n    if (file) {\n        return file;\n    }\n    return false;\n}\nfunction tryModule(request, paths, fs) {\n    for (const pathname of paths) {\n        let file = path_1.default.resolve(pathname, request);\n        if (fs.existsSync(file) && fs.lstatSync(file).isFile()) {\n            return file;\n        }\n        file = tryVariants(file, fs);\n        if (file) {\n            return file;\n        }\n    }\n    return false;\n}\nfunction tryVariants(request, fs) {\n    let file = tryExtensions(request, fs);\n    if (file) {\n        return file;\n    }\n    file = tryIndex(request, fs);\n    if (file) {\n        return file;\n    }\n    return false;\n}\nfunction tryIndex(request, fs) {\n    let file = `${request}/index`;\n    if (fs.existsSync(file) && fs.lstatSync(file).isFile()) {\n        return file;\n    }\n    file = tryExtensions(file, fs);\n    if (file) {\n        return file;\n    }\n    return false;\n}\nfunction tryExtensions(request, fs) {\n    let file = `${request}.js`;\n    if (fs.existsSync(file) && fs.lstatSync(file).isFile()) {\n        return file;\n    }\n    file = `${request}.jsx`;\n    if (fs.existsSync(file) && fs.lstatSync(file).isFile()) {\n        return file;\n    }\n    file = `${request}.json`;\n    if (fs.existsSync(file) && fs.lstatSync(file).isFile()) {\n        return file;\n    }\n    return false;\n}\nconst vfs = new VirtualFS;\nexports.vfs = vfs;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}